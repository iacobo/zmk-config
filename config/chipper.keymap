#include "zmk-helpers/helper.h"

#define HM_TAPPING_TERM 280
#define HM_TAPPING_TERM_FAST 175
#define HM_PRIOR_IDLE 150
#define COMBO_TERM_FAST 35
#define COMBO_TERM_SLOW 40
#define COMBO_PRIOR_IDLE 100
#define BASE 0
#define NUMS 1
#define DANGER 2

/* use helper macros to define left and right hand keys */

#include "zmk-helpers/key-labels/36.h"                                      // key-position labels
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define KEYS_T                 LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/ {
    behaviors {
        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.
        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;

            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&kp TAB>;
            key-positions = <6 7>;
        };

        escapeleft {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&kp ESCAPE>;
            key-positions = <5 6>;
        };

        SYS_LAYER {
            bindings = <&mo 3>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
  &kp APOS              &kp COMMA         &kp PERIOD        &kp P                     &kp Y        &kp F      &kp G                      &kp C              &kp R              &kp L
  &hm_l LEFT_CONTROL A  &hm_l LEFT_WIN O  &hm_l LEFT_ALT E  &hm_shift_l LEFT_SHIFT U  &kp I        &kp D      &hm_shift_r RIGHT_SHIFT H  &hm_r RIGHT_ALT T  &hm_r RIGHT_WIN N  &hm_r RCTRL S
  &kp SEMICOLON         &kp Q             &kp J             &kp K                     &kp X        &kp B      &kp M                      &kp W              &kp V              &kp Z
                                          &mo 2             &mo 1                     &kp ENTER    &kp SPACE  &kp BACKSPACE              &kp DEL
            >;
        };

        raise_layer {
            display-name = "NUM";
            bindings = <
  &kp GRAVE            &kp EXCLAMATION  &kp QUESTION    &kp LEFT_BRACKET                         &kp RIGHT_BRACKET        &kp ASTERISK  &kp N7                      &kp N8  &kp N9  &kp N0
  &hm_l LCTRL AT_SIGN  &kp POUND        &kp DOLLAR      &hm_shift_l LEFT_SHIFT LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp MINUS     &hm_shift_r RIGHT_SHIFT N4  &kp N5  &kp N6  &hm_r RIGHT_CONTROL PLUS
  &kp PERCENT          &kp CARET        &kp UNDERSCORE  &kp PIPE                                 &kp AMPERSAND            &kp SLASH     &kp N1                      &kp N2  &kp N3  &kp NON_US_BACKSLASH
                                        &trans          &trans                                   &trans                   &trans        &trans                      &trans
            >;
        };

        lower_layer {
            display-name = "NAV";
            bindings = <
  &trans     &kp F9  &kp F10            &kp F11                    &kp F12    &kp C_VOL_DN  &kp C_VOL_UP    &kp UP_ARROW    &trans     &trans
  &kp LCTRL  &kp F5  &hm_l LEFT_ALT F6  &hm_shift_l LEFT_SHIFT F7  &kp F8     &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp RCTRL
  &trans     &kp F1  &kp F2             &kp F3                     &kp F4     &kp C_BRI_DN  &kp C_BRI_UP    &trans          &trans     &trans
                     &trans             &trans                     &trans     &trans        &trans          &trans
            >;
        };

        layer_3 {
            display-name = "SYS";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans      &trans  &bt BT_CLR
  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_PRV  &bt BT_NXT  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans      &trans  &trans
                  &trans  &trans  &trans    &trans  &trans      &trans
            >;
        };
    };
};
